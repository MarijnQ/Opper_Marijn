from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import random
import sys
import time

class GaryVee:
    username = 'USERNAME'
    password = 'PASSWORD'
    
    hashtags1 = ['HASHTAG',]
    hashtags2 = ['HASHTAG',]
    hashtags3 = ['HASHTAG',]
#Fill in your Username + Password in between the ''
#Do the same for the hashtags you want to target
        
    comments = [
        'COMMENTS',
    ]
#Fill the comments with atleast 10 variations. Separate with a ,

    links1 = []
    links2 = []
    links3 = []

    def __init__(self):
        self.browser = webdriver.Chrome('LOCATION Chrome Driver')
        self.login()
        self.hustle()
        
#Download Chromedriver from https://chromedriver.chromium.org/ and paste location above
        
    def login(self):
        self.browser.get('https://www.instagram.com/accounts/login/?source=auth_switcher')
        time.sleep(2)

        username_field = self.browser.find_element_by_xpath("//input[@name='username']")
        username_field.clear()
        username_field.send_keys(self.username)
        time.sleep(1)

        password_field = self.browser.find_element_by_xpath("//input[@name='password']")
        password_field.clear()
        password_field.send_keys(self.password)
        time.sleep(1)

        login_button = self.browser.find_element_by_xpath("//button[@type='submit']")
        login_button.click()
        time.sleep(2)

    def hustle(self):
        self.getTopPosts1()
        self.execute1 ()
        self.getTopPosts2()
        self.execute2()
        self.getTopPosts3()
        self.execute3()
        self.finalize()

#1 Bot evation w likes
    def getTopPosts1(self):
        for hashtag in self.hashtags1:
            self.browser.get('https://www.instagram.com/explore/tags/' + hashtag +'/')
            time.sleep(2)

            links1 = self.browser.find_elements_by_tag_name('a')
            condition = lambda link: '.com/p/' in link.get_attribute('href')
            valid_links = list(filter(condition, links1))

            for i in range(0, 10):
                link = valid_links[i].get_attribute('href')
                if link not in self.links1:
                    self.links1.append(link)

    def execute1(self):
        for link in self.links1:
            self.browser.get(link)
            time.sleep(1)

            self.browser.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(1)
            
            self.like1()

            sleeptime = random.randint(40, 68)
            time.sleep(sleeptime)
            
    def like1(self):
        like_button = lambda: self.browser.find_element_by_xpath('//span[@class="fr66n"]')
        like_button().click()
        
#2 Real comment post
    def getTopPosts2(self):
        for hashtag in self.hashtags2:
            self.browser.get('https://www.instagram.com/explore/tags/' + hashtag +'/')
            time.sleep(2)

            links2 = self.browser.find_elements_by_tag_name('a')
            condition = lambda link: '.com/p/' in link.get_attribute('href')
            valid_links = list(filter(condition, links2))

            for i in range(1, 25):
                link = valid_links[i].get_attribute('href')
                if link not in self.links2:
                    self.links2.append(link)

    def execute2(self):
        for link in self.links2:
            self.browser.get(link)
            time.sleep(1)

            self.browser.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(1)
            
            self.comment2()
            time.sleep(5)
            self.like2()
            time.sleep(3)
            

            sleeptime = random.randint(37, 79)
            time.sleep(sleeptime)
            
    def like2(self):
        like_button = lambda: self.browser.find_element_by_xpath('//span[@class="fr66n"]')
        like_button().click()

    def comment2(self):


        comment_input = lambda: self.browser.find_element_by_tag_name('textarea')
        comment_input().click()
        comment_input().clear()

        comment = random.choice(self.comments)
        for letter in comment:
            comment_input().send_keys(letter)
            delay = random.randint(1, 9) / 30
            time.sleep(delay)

        comment_input().send_keys(Keys.RETURN)
    
#3 Bot evation w likes

    def getTopPosts3(self):
        for hashtag in self.hashtags3:
            self.browser.get('https://www.instagram.com/explore/tags/' + hashtag +'/')
            time.sleep(2)

            links3 = self.browser.find_elements_by_tag_name('a')
            condition = lambda link: '.com/p/' in link.get_attribute('href')
            valid_links = list(filter(condition, links3))

            for i in range(10, 25):
                link = valid_links[i].get_attribute('href')
                if link not in self.links3:
                    self.links3.append(link)

    def execute3(self):
        for link in self.links3:
            self.browser.get(link)
            time.sleep(1)

            self.browser.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(1)
            
            self.like3()

            sleeptime = random.randint(50, 85)
            time.sleep(sleeptime)
            
    def like3(self):
        like_button = lambda: self.browser.find_element_by_xpath('//span[@class="fr66n"]')
        like_button().click()
        
    def finalize(self):
        print ('Program ran succesfully')
        self.browser.close()
        sys.exit()
        
garyVee = GaryVee()
